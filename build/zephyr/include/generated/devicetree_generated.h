/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/ruben/Projects/zephyr/app_blink_timer/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /device_id@80a00c
 *   4   /memory@20000000
 *   5   /buttons
 *   6   /soc
 *   7   /soc/pinctrl@41004400
 *   8   /soc/pinctrl@41004400/gpio@41004400
 *   9   /buttons/button_0
 *   10  /cpus
 *   11  /cpus/cpu@0
 *   12  /leds
 *   13  /soc/pinctrl@41004400/gpio@41004480
 *   14  /leds/led_0
 *   15  /pwmleds
 *   16  /soc/gclk@40000c00
 *   17  /soc/interrupt-controller@e000e100
 *   18  /soc/pm@40000400
 *   19  /soc/pinctrl@41004400/pwm_default
 *   20  /soc/tcc@42002000
 *   21  /pwmleds/pwm_led_0
 *   22  /soc/adc@42004000
 *   23  /soc/dac@42004800
 *   24  /soc/dmac@41004800
 *   25  /soc/eic@40001800
 *   26  /soc/pinmux@41004400
 *   27  /soc/pinmux@41004480
 *   28  /soc/rtc@40001400
 *   29  /soc/pinctrl@41004400/sercom0_uart_default
 *   30  /soc/sercom@42000800
 *   31  /soc/pinctrl@41004400/sercom1_uart_default
 *   32  /soc/sercom@42000c00
 *   33  /soc/pinctrl@41004400/sercom2_i2c_default
 *   34  /soc/sercom@42001000
 *   35  /soc/pinctrl@41004400/sercom3_uart_default
 *   36  /soc/sercom@42001400
 *   37  /soc/sercom@42001800
 *   38  /soc/pinctrl@41004400/sercom5_spi_default
 *   39  /soc/sercom@42001c00
 *   40  /soc/tc@42003000
 *   41  /soc/tc@42003800
 *   42  /soc/tcc@42002400
 *   43  /soc/tcc@42002800
 *   44  /soc/timer@e000e010
 *   45  /soc/pinctrl@41004400/usb_dc_default
 *   46  /soc/usb@41005000
 *   47  /soc/watchdog@40001000
 *   48  /soc/nvmctrl@41004000
 *   49  /soc/nvmctrl@41004000/flash@0
 *   50  /soc/pinctrl@41004400/pwm_default/group1
 *   51  /soc/pinctrl@41004400/sercom0_uart_default/group1
 *   52  /soc/pinctrl@41004400/sercom1_uart_default/group1
 *   53  /soc/pinctrl@41004400/sercom2_i2c_default/group1
 *   54  /soc/pinctrl@41004400/sercom3_uart_default/group1
 *   55  /soc/pinctrl@41004400/sercom5_spi_default/group1
 *   56  /soc/pinctrl@41004400/usb_dc_default/group1
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_device_id_80a00c) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_device_id_80a00c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_device_id_80a00c, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_device_id_80a00c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_device_id_80a00c) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_device_id_80a00c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_device_id_80a00c, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_device_id_80a00c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /device_id@80a00c */ \
	4, /* /memory@20000000 */ \
	5, /* /buttons */ \
	6, /* /soc */ \
	10, /* /cpus */ \
	12, /* /leds */ \
	15, /* /pwmleds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_atsamd21_xpro    DT_N
#define DT_N_INST_0_atmel_samd21j18a DT_N
#define DT_N_INST_0_atmel_samd21     DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_atsamd21_xpro 1
#define DT_N_COMPAT_MATCHES_atmel_samd21j18a 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "Atmel Corporation"
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "samd21j18a"
#define DT_N_COMPAT_MATCHES_atmel_samd21 1
#define DT_N_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_2 "Atmel Corporation"
#define DT_N_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_2 "samd21"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"atsamd21,xpro", "atmel,samd21j18a", "atmel,samd21"}
#define DT_N_P_compatible_IDX_0 "atsamd21,xpro"
#define DT_N_P_compatible_IDX_0_STRING_TOKEN atsamd21_xpro
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ATSAMD21_XPRO
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_1 "atmel,samd21j18a"
#define DT_N_P_compatible_IDX_1_STRING_TOKEN atmel_samd21j18a
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN ATMEL_SAMD21J18A
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_IDX_2 "atmel,samd21"
#define DT_N_P_compatible_IDX_2_STRING_TOKEN atmel_samd21
#define DT_N_P_compatible_IDX_2_STRING_UPPER_TOKEN ATMEL_SAMD21
#define DT_N_P_compatible_IDX_2_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1) \
	fn(DT_N, compatible, 2)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 2)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__) \
	fn(DT_N, compatible, 2, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 2, __VA_ARGS__)
#define DT_N_P_compatible_LEN 3
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /device_id@80a00c
 *
 * Node identifier: DT_N_S_device_id_80a00c
 *
 * Binding (compatible = atmel,sam0-id):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-id.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_device_id_80a00c_PATH "/device_id@80a00c"

/* Node's name with unit-address: */
#define DT_N_S_device_id_80a00c_FULL_NAME "device_id@80a00c"

/* Node parent (/) identifier: */
#define DT_N_S_device_id_80a00c_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_device_id_80a00c_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_device_id_80a00c_FOREACH_CHILD(fn) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_device_id_80a00c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_device_id_80a00c_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_device_id_80a00c_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_device_id_80a00c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_device_id_80a00c_EXISTS 1
#define DT_N_INST_0_atmel_sam0_id DT_N_S_device_id_80a00c
#define DT_N_NODELABEL_id         DT_N_S_device_id_80a00c

/* Macros for properties that are special in the specification: */
#define DT_N_S_device_id_80a00c_REG_NUM 4
#define DT_N_S_device_id_80a00c_REG_IDX_0_EXISTS 1
#define DT_N_S_device_id_80a00c_REG_IDX_0_VAL_ADDRESS 8429580 /* 0x80a00c */
#define DT_N_S_device_id_80a00c_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_device_id_80a00c_REG_IDX_1_EXISTS 1
#define DT_N_S_device_id_80a00c_REG_IDX_1_VAL_ADDRESS 8429632 /* 0x80a040 */
#define DT_N_S_device_id_80a00c_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_device_id_80a00c_REG_IDX_2_EXISTS 1
#define DT_N_S_device_id_80a00c_REG_IDX_2_VAL_ADDRESS 8429636 /* 0x80a044 */
#define DT_N_S_device_id_80a00c_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_device_id_80a00c_REG_IDX_3_EXISTS 1
#define DT_N_S_device_id_80a00c_REG_IDX_3_VAL_ADDRESS 8429640 /* 0x80a048 */
#define DT_N_S_device_id_80a00c_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_device_id_80a00c_RANGES_NUM 0
#define DT_N_S_device_id_80a00c_FOREACH_RANGE(fn) 
#define DT_N_S_device_id_80a00c_IRQ_NUM 0
#define DT_N_S_device_id_80a00c_COMPAT_MATCHES_atmel_sam0_id 1
#define DT_N_S_device_id_80a00c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_device_id_80a00c_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_device_id_80a00c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_device_id_80a00c_COMPAT_MODEL_IDX_0 "sam0-id"
#define DT_N_S_device_id_80a00c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_device_id_80a00c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_device_id_80a00c_P_reg {8429580 /* 0x80a00c */, 4 /* 0x4 */, 8429632 /* 0x80a040 */, 4 /* 0x4 */, 8429636 /* 0x80a044 */, 4 /* 0x4 */, 8429640 /* 0x80a048 */, 4 /* 0x4 */}
#define DT_N_S_device_id_80a00c_P_reg_IDX_0 8429580
#define DT_N_S_device_id_80a00c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_1 4
#define DT_N_S_device_id_80a00c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_2 8429632
#define DT_N_S_device_id_80a00c_P_reg_IDX_2_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_3 4
#define DT_N_S_device_id_80a00c_P_reg_IDX_3_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_4 8429636
#define DT_N_S_device_id_80a00c_P_reg_IDX_4_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_5 4
#define DT_N_S_device_id_80a00c_P_reg_IDX_5_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_6 8429640
#define DT_N_S_device_id_80a00c_P_reg_IDX_6_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_IDX_7 4
#define DT_N_S_device_id_80a00c_P_reg_IDX_7_EXISTS 1
#define DT_N_S_device_id_80a00c_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_device_id_80a00c, reg, 0) \
	fn(DT_N_S_device_id_80a00c, reg, 1) \
	fn(DT_N_S_device_id_80a00c, reg, 2) \
	fn(DT_N_S_device_id_80a00c, reg, 3) \
	fn(DT_N_S_device_id_80a00c, reg, 4) \
	fn(DT_N_S_device_id_80a00c, reg, 5) \
	fn(DT_N_S_device_id_80a00c, reg, 6) \
	fn(DT_N_S_device_id_80a00c, reg, 7)
#define DT_N_S_device_id_80a00c_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_device_id_80a00c, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 7)
#define DT_N_S_device_id_80a00c_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_device_id_80a00c, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 3, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 4, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 5, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 6, __VA_ARGS__) \
	fn(DT_N_S_device_id_80a00c, reg, 7, __VA_ARGS__)
#define DT_N_S_device_id_80a00c_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_device_id_80a00c, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_device_id_80a00c, reg, 7, __VA_ARGS__)
#define DT_N_S_device_id_80a00c_P_reg_EXISTS 1
#define DT_N_S_device_id_80a00c_P_compatible {"atmel,sam0-id"}
#define DT_N_S_device_id_80a00c_P_compatible_IDX_0 "atmel,sam0-id"
#define DT_N_S_device_id_80a00c_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_id
#define DT_N_S_device_id_80a00c_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_ID
#define DT_N_S_device_id_80a00c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_device_id_80a00c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_device_id_80a00c, compatible, 0)
#define DT_N_S_device_id_80a00c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_device_id_80a00c, compatible, 0)
#define DT_N_S_device_id_80a00c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_device_id_80a00c, compatible, 0, __VA_ARGS__)
#define DT_N_S_device_id_80a00c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_device_id_80a00c, compatible, 0, __VA_ARGS__)
#define DT_N_S_device_id_80a00c_P_compatible_LEN 1
#define DT_N_S_device_id_80a00c_P_compatible_EXISTS 1
#define DT_N_S_device_id_80a00c_P_wakeup_source 0
#define DT_N_S_device_id_80a00c_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 32768
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	9, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_pm_40000400) fn(DT_N_S_soc_S_gclk_40000c00) fn(DT_N_S_soc_S_eic_40001800) fn(DT_N_S_soc_S_pinmux_41004400) fn(DT_N_S_soc_S_pinmux_41004480) fn(DT_N_S_soc_S_watchdog_40001000) fn(DT_N_S_soc_S_sercom_42000800) fn(DT_N_S_soc_S_sercom_42000c00) fn(DT_N_S_soc_S_sercom_42001000) fn(DT_N_S_soc_S_sercom_42001400) fn(DT_N_S_soc_S_sercom_42001800) fn(DT_N_S_soc_S_sercom_42001c00) fn(DT_N_S_soc_S_tc_42003000) fn(DT_N_S_soc_S_pinctrl_41004400) fn(DT_N_S_soc_S_rtc_40001400) fn(DT_N_S_soc_S_adc_42004000) fn(DT_N_S_soc_S_dac_42004800) fn(DT_N_S_soc_S_usb_41005000) fn(DT_N_S_soc_S_dmac_41004800) fn(DT_N_S_soc_S_tc_42003800) fn(DT_N_S_soc_S_tcc_42002000) fn(DT_N_S_soc_S_tcc_42002400) fn(DT_N_S_soc_S_tcc_42002800)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pm_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_41004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002800)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_pm_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41004480, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42000c00, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001c00, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42003000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42004000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_42004800, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_dmac_41004800, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42003800, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002400, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pm_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_41004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_pm_40000400) fn(DT_N_S_soc_S_gclk_40000c00) fn(DT_N_S_soc_S_eic_40001800) fn(DT_N_S_soc_S_pinmux_41004400) fn(DT_N_S_soc_S_pinmux_41004480) fn(DT_N_S_soc_S_watchdog_40001000) fn(DT_N_S_soc_S_sercom_42000800) fn(DT_N_S_soc_S_sercom_42000c00) fn(DT_N_S_soc_S_sercom_42001000) fn(DT_N_S_soc_S_sercom_42001400) fn(DT_N_S_soc_S_sercom_42001c00) fn(DT_N_S_soc_S_tc_42003000) fn(DT_N_S_soc_S_pinctrl_41004400) fn(DT_N_S_soc_S_adc_42004000) fn(DT_N_S_soc_S_usb_41005000) fn(DT_N_S_soc_S_dmac_41004800) fn(DT_N_S_soc_S_tc_42003800) fn(DT_N_S_soc_S_tcc_42002000) fn(DT_N_S_soc_S_tcc_42002400) fn(DT_N_S_soc_S_tcc_42002800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pm_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_41004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_pm_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41004480, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42000c00, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001c00, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42003000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42004000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_dmac_41004800, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42003800, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002400, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pm_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41004480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_42001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_41004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42002800, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/pinctrl@41004400 */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	20, /* /soc/tcc@42002000 */ \
	22, /* /soc/adc@42004000 */ \
	23, /* /soc/dac@42004800 */ \
	24, /* /soc/dmac@41004800 */ \
	25, /* /soc/eic@40001800 */ \
	26, /* /soc/pinmux@41004400 */ \
	27, /* /soc/pinmux@41004480 */ \
	28, /* /soc/rtc@40001400 */ \
	30, /* /soc/sercom@42000800 */ \
	32, /* /soc/sercom@42000c00 */ \
	34, /* /soc/sercom@42001000 */ \
	36, /* /soc/sercom@42001400 */ \
	37, /* /soc/sercom@42001800 */ \
	39, /* /soc/sercom@42001c00 */ \
	40, /* /soc/tc@42003000 */ \
	41, /* /soc/tc@42003800 */ \
	42, /* /soc/tcc@42002400 */ \
	43, /* /soc/tcc@42002800 */ \
	44, /* /soc/timer@e000e010 */ \
	46, /* /soc/usb@41005000 */ \
	47, /* /soc/watchdog@40001000 */ \
	48, /* /soc/nvmctrl@41004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400
 *
 * Binding (compatible = atmel,sam0-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_PATH "/soc/pinctrl@41004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_FULL_NAME "pinctrl@41004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_SUPPORTS_ORDS \
	8, /* /soc/pinctrl@41004400/gpio@41004400 */ \
	13, /* /soc/pinctrl@41004400/gpio@41004480 */ \
	19, /* /soc/pinctrl@41004400/pwm_default */ \
	29, /* /soc/pinctrl@41004400/sercom0_uart_default */ \
	31, /* /soc/pinctrl@41004400/sercom1_uart_default */ \
	33, /* /soc/pinctrl@41004400/sercom2_i2c_default */ \
	35, /* /soc/pinctrl@41004400/sercom3_uart_default */ \
	38, /* /soc/pinctrl@41004400/sercom5_spi_default */ \
	45, /* /soc/pinctrl@41004400/usb_dc_default */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_EXISTS 1
#define DT_N_INST_0_atmel_sam0_pinctrl DT_N_S_soc_S_pinctrl_41004400
#define DT_N_NODELABEL_pinctrl         DT_N_S_soc_S_pinctrl_41004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_RANGES_NUM 1
#define DT_N_S_soc_S_pinctrl_41004400_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 1090536448 /* 0x41004400 */
#define DT_N_S_soc_S_pinctrl_41004400_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 1090536448 /* 0x41004400 */
#define DT_N_S_soc_S_pinctrl_41004400_RANGES_IDX_0_VAL_LENGTH 256 /* 0x100 */
#define DT_N_S_soc_S_pinctrl_41004400_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_pinctrl_41004400, 0)
#define DT_N_S_soc_S_pinctrl_41004400_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_COMPAT_MATCHES_atmel_sam0_pinctrl 1
#define DT_N_S_soc_S_pinctrl_41004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_COMPAT_MODEL_IDX_0 "sam0-pinctrl"
#define DT_N_S_soc_S_pinctrl_41004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible {"atmel,sam0-pinctrl"}
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_IDX_0 "atmel,sam0-pinctrl"
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinctrl
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINCTRL
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/gpio@41004400
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_PATH "/soc/pinctrl@41004400/gpio@41004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FULL_NAME "gpio@41004400"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_SUPPORTS_ORDS \
	9, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_EXISTS 1
#define DT_N_ALIAS_port_a           DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400
#define DT_N_INST_0_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400
#define DT_N_NODELABEL_porta        DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_REG_IDX_0_VAL_ADDRESS 1090536448 /* 0x41004400 */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg {1090536448 /* 0x41004400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_IDX_0 1090536448
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	5, /* /buttons */ \
	8, /* /soc/pinctrl@41004400/gpio@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_user_button DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "SW0"
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN SW0
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN SW0
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0) \
	fn(DT_N_S_buttons_S_button_0, label, 1) \
	fn(DT_N_S_buttons_S_button_0, label, 2)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_buttons_S_button_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_buttons_S_button_0, label, 2)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 2, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_buttons_S_button_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_buttons_S_button_0, label, 2, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 0
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	11, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	10, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 48000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	14, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/gpio@41004480
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_PATH "/soc/pinctrl@41004400/gpio@41004480"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FULL_NAME "gpio@41004480"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_SUPPORTS_ORDS \
	14, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_EXISTS 1
#define DT_N_ALIAS_port_b           DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480
#define DT_N_INST_1_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480
#define DT_N_NODELABEL_portb        DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_REG_IDX_0_VAL_ADDRESS 1090536576 /* 0x41004480 */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg {1090536576 /* 0x41004480 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_IDX_0 1090536576
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	12, /* /leds */ \
	13, /* /soc/pinctrl@41004400/gpio@41004480 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 30
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Yellow LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Yellow_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN YELLOW_LED
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0) \
	fn(DT_N_S_leds_S_led_0, label, 1) \
	fn(DT_N_S_leds_S_led_0, label, 2) \
	fn(DT_N_S_leds_S_led_0, label, 3) \
	fn(DT_N_S_leds_S_led_0, label, 4) \
	fn(DT_N_S_leds_S_led_0, label, 5) \
	fn(DT_N_S_leds_S_led_0, label, 6) \
	fn(DT_N_S_leds_S_led_0, label, 7) \
	fn(DT_N_S_leds_S_led_0, label, 8) \
	fn(DT_N_S_leds_S_led_0, label, 9)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 9)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 9, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_0, label, 9, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	21, /* /pwmleds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gclk@40000c00
 *
 * Node identifier: DT_N_S_soc_S_gclk_40000c00
 *
 * Binding (compatible = atmel,samd2x-gclk):
 *   $ZEPHYR_BASE/dts/bindings/clock/atmel,samd2x-gclk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gclk_40000c00_PATH "/soc/gclk@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gclk_40000c00_FULL_NAME "gclk@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gclk_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gclk_40000c00_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gclk_40000c00_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gclk_40000c00_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gclk_40000c00_SUPPORTS_ORDS \
	20, /* /soc/tcc@42002000 */ \
	22, /* /soc/adc@42004000 */ \
	23, /* /soc/dac@42004800 */ \
	30, /* /soc/sercom@42000800 */ \
	32, /* /soc/sercom@42000c00 */ \
	34, /* /soc/sercom@42001000 */ \
	36, /* /soc/sercom@42001400 */ \
	37, /* /soc/sercom@42001800 */ \
	39, /* /soc/sercom@42001c00 */ \
	40, /* /soc/tc@42003000 */ \
	41, /* /soc/tc@42003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gclk_40000c00_EXISTS 1
#define DT_N_INST_0_atmel_samd2x_gclk DT_N_S_soc_S_gclk_40000c00
#define DT_N_NODELABEL_gclk           DT_N_S_soc_S_gclk_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gclk_40000c00_REG_NUM 1
#define DT_N_S_soc_S_gclk_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_gclk_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_gclk_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_gclk_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gclk_40000c00_IRQ_NUM 0
#define DT_N_S_soc_S_gclk_40000c00_COMPAT_MATCHES_atmel_samd2x_gclk 1
#define DT_N_S_soc_S_gclk_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_gclk_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_COMPAT_MODEL_IDX_0 "samd2x-gclk"
#define DT_N_S_soc_S_gclk_40000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gclk_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gclk_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_gclk_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_gclk_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_gclk_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gclk_40000c00, reg, 0) \
	fn(DT_N_S_soc_S_gclk_40000c00, reg, 1)
#define DT_N_S_soc_S_gclk_40000c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gclk_40000c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gclk_40000c00, reg, 1)
#define DT_N_S_soc_S_gclk_40000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gclk_40000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gclk_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40000c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gclk_40000c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gclk_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_P_compatible {"atmel,samd2x-gclk"}
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_IDX_0 "atmel,samd2x-gclk"
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_IDX_0_STRING_TOKEN atmel_samd2x_gclk
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAMD2X_GCLK
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gclk_40000c00, compatible, 0)
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gclk_40000c00, compatible, 0)
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gclk_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gclk_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_gclk_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gclk_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_gclk_40000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v6m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v6m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	18, /* /soc/pm@40000400 */ \
	20, /* /soc/tcc@42002000 */ \
	22, /* /soc/adc@42004000 */ \
	23, /* /soc/dac@42004800 */ \
	24, /* /soc/dmac@41004800 */ \
	25, /* /soc/eic@40001800 */ \
	28, /* /soc/rtc@40001400 */ \
	30, /* /soc/sercom@42000800 */ \
	32, /* /soc/sercom@42000c00 */ \
	34, /* /soc/sercom@42001000 */ \
	36, /* /soc/sercom@42001400 */ \
	37, /* /soc/sercom@42001800 */ \
	39, /* /soc/sercom@42001c00 */ \
	40, /* /soc/tc@42003000 */ \
	41, /* /soc/tc@42003800 */ \
	42, /* /soc/tcc@42002400 */ \
	43, /* /soc/tcc@42002800 */ \
	46, /* /soc/usb@41005000 */ \
	47, /* /soc/watchdog@40001000 */ \
	48, /* /soc/nvmctrl@41004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v6m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v6m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 2
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v6m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v6m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V6M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pm@40000400
 *
 * Node identifier: DT_N_S_soc_S_pm_40000400
 *
 * Binding (compatible = atmel,samd2x-pm):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,samd2x-pm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pm_40000400_PATH "/soc/pm@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pm_40000400_FULL_NAME "pm@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pm_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pm_40000400_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pm_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pm_40000400_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pm_40000400_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pm_40000400_SUPPORTS_ORDS \
	20, /* /soc/tcc@42002000 */ \
	22, /* /soc/adc@42004000 */ \
	23, /* /soc/dac@42004800 */ \
	30, /* /soc/sercom@42000800 */ \
	32, /* /soc/sercom@42000c00 */ \
	34, /* /soc/sercom@42001000 */ \
	36, /* /soc/sercom@42001400 */ \
	37, /* /soc/sercom@42001800 */ \
	39, /* /soc/sercom@42001c00 */ \
	40, /* /soc/tc@42003000 */ \
	41, /* /soc/tc@42003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pm_40000400_EXISTS 1
#define DT_N_INST_0_atmel_samd2x_pm DT_N_S_soc_S_pm_40000400
#define DT_N_NODELABEL_pm           DT_N_S_soc_S_pm_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pm_40000400_REG_NUM 1
#define DT_N_S_soc_S_pm_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_pm_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pm_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_pm_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pm_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pm_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_COMPAT_MATCHES_atmel_samd2x_pm 1
#define DT_N_S_soc_S_pm_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pm_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_COMPAT_MODEL_IDX_0 "samd2x-pm"
#define DT_N_S_soc_S_pm_40000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pm_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pm_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pm_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_pm_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pm_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pm_40000400, reg, 0) \
	fn(DT_N_S_soc_S_pm_40000400, reg, 1)
#define DT_N_S_soc_S_pm_40000400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pm_40000400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pm_40000400, reg, 1)
#define DT_N_S_soc_S_pm_40000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pm_40000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pm_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pm_40000400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pm_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_compatible {"atmel,samd2x-pm"}
#define DT_N_S_soc_S_pm_40000400_P_compatible_IDX_0 "atmel,samd2x-pm"
#define DT_N_S_soc_S_pm_40000400_P_compatible_IDX_0_STRING_TOKEN atmel_samd2x_pm
#define DT_N_S_soc_S_pm_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAMD2X_PM
#define DT_N_S_soc_S_pm_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pm_40000400, compatible, 0)
#define DT_N_S_soc_S_pm_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pm_40000400, compatible, 0)
#define DT_N_S_soc_S_pm_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pm_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pm_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pm_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_interrupts {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pm_40000400_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_pm_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pm_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pm_40000400, interrupts, 0) \
	fn(DT_N_S_soc_S_pm_40000400, interrupts, 1)
#define DT_N_S_soc_S_pm_40000400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pm_40000400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pm_40000400, interrupts, 1)
#define DT_N_S_soc_S_pm_40000400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pm_40000400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pm_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pm_40000400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pm_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pm_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pm_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_pm_40000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/pwm_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_pwm_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_PATH "/soc/pinctrl@41004400/pwm_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FULL_NAME "pwm_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_SUPPORTS_ORDS \
	20, /* /soc/tcc@42002000 */ \
	50, /* /soc/pinctrl@41004400/pwm_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_EXISTS 1
#define DT_N_NODELABEL_pwm_default DT_N_S_soc_S_pinctrl_41004400_S_pwm_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/tcc@42002000
 *
 * Node identifier: DT_N_S_soc_S_tcc_42002000
 *
 * Binding (compatible = atmel,sam0-tcc-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/atmel,sam0-tcc-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_42002000_PATH "/soc/tcc@42002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_42002000_FULL_NAME "tcc@42002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_42002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_42002000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_42002000_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_42002000_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	19, /* /soc/pinctrl@41004400/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_42002000_SUPPORTS_ORDS \
	21, /* /pwmleds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_42002000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_tcc_pwm DT_N_S_soc_S_tcc_42002000
#define DT_N_NODELABEL_tcc0            DT_N_S_soc_S_tcc_42002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_42002000_REG_NUM 1
#define DT_N_S_soc_S_tcc_42002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_REG_IDX_0_VAL_ADDRESS 1107304448 /* 0x42002000 */
#define DT_N_S_soc_S_tcc_42002000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_tcc_42002000_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_42002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_42002000_IRQ_NUM 1
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_42002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_COMPAT_MATCHES_atmel_sam0_tcc_pwm 1
#define DT_N_S_soc_S_tcc_42002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_42002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_COMPAT_MODEL_IDX_0 "sam0-tcc-pwm"
#define DT_N_S_soc_S_tcc_42002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_NUM 1
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_tcc_42002000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_pwm_default

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_42002000_P_reg {1107304448 /* 0x42002000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_tcc_42002000_P_reg_IDX_0 1107304448
#define DT_N_S_soc_S_tcc_42002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_reg_IDX_1 128
#define DT_N_S_soc_S_tcc_42002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, reg, 0) \
	fn(DT_N_S_soc_S_tcc_42002000, reg, 1)
#define DT_N_S_soc_S_tcc_42002000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, reg, 1)
#define DT_N_S_soc_S_tcc_42002000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, interrupts, 0) \
	fn(DT_N_S_soc_S_tcc_42002000, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_VAL_clkctrl_id 26
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_bit 8
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_tcc_42002000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tcc_42002000_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, clocks, 0) \
	fn(DT_N_S_soc_S_tcc_42002000, clocks, 1)
#define DT_N_S_soc_S_tcc_42002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, clocks, 1)
#define DT_N_S_soc_S_tcc_42002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_clocks_LEN 2
#define DT_N_S_soc_S_tcc_42002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, clock_names, 0) \
	fn(DT_N_S_soc_S_tcc_42002000, clock_names, 1)
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, clock_names, 1)
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_LEN 2
#define DT_N_S_soc_S_tcc_42002000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_channels 4
#define DT_N_S_soc_S_tcc_42002000_P_channels_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_42002000_P_channels_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_counter_size 24
#define DT_N_S_soc_S_tcc_42002000_P_counter_size_ENUM_IDX 1
#define DT_N_S_soc_S_tcc_42002000_P_counter_size_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_prescaler 4
#define DT_N_S_soc_S_tcc_42002000_P_prescaler_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_42002000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_status "okay"
#define DT_N_S_soc_S_tcc_42002000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_tcc_42002000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_tcc_42002000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_tcc_42002000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_tcc_42002000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_tcc_42002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, status, 0) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 1) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 2) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 3)
#define DT_N_S_soc_S_tcc_42002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 3)
#define DT_N_S_soc_S_tcc_42002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_status_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_compatible {"atmel,sam0-tcc-pwm"}
#define DT_N_S_soc_S_tcc_42002000_P_compatible_IDX_0 "atmel,sam0-tcc-pwm"
#define DT_N_S_soc_S_tcc_42002000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc_pwm
#define DT_N_S_soc_S_tcc_42002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC_PWM
#define DT_N_S_soc_S_tcc_42002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, compatible, 0)
#define DT_N_S_soc_S_tcc_42002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, compatible, 0)
#define DT_N_S_soc_S_tcc_42002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_42002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_wakeup_source 0
#define DT_N_S_soc_S_tcc_42002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_pwm_default
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_pwm_default
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_0, 0)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_0, 0)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_names, 0)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_names, 0)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_tcc_42002000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_0
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_0_PATH "/pwmleds/pwm_led_0"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME "pwm_led_0"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_0_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_0_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_0_REQUIRES_ORDS \
	15, /* /pwmleds */ \
	20, /* /soc/tcc@42002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_0_EXISTS 1
#define DT_N_ALIAS_pwm_led0     DT_N_S_pwmleds_S_pwm_led_0
#define DT_N_NODELABEL_pwm_led0 DT_N_S_pwmleds_S_pwm_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_0_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_PH DT_N_S_soc_S_tcc_42002000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel 0
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/adc@42004000
 *
 * Node identifier: DT_N_S_soc_S_adc_42004000
 *
 * Binding (compatible = atmel,sam0-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/atmel,sam0-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_42004000_PATH "/soc/adc@42004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_42004000_FULL_NAME "adc@42004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_42004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_42004000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_42004000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_42004000_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_42004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_42004000_EXISTS 1
#define DT_N_ALIAS_adc_0           DT_N_S_soc_S_adc_42004000
#define DT_N_INST_0_atmel_sam0_adc DT_N_S_soc_S_adc_42004000
#define DT_N_NODELABEL_adc         DT_N_S_soc_S_adc_42004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_42004000_REG_NUM 1
#define DT_N_S_soc_S_adc_42004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_REG_IDX_0_VAL_ADDRESS 1107312640 /* 0x42004000 */
#define DT_N_S_soc_S_adc_42004000_REG_IDX_0_VAL_SIZE 43 /* 0x2b */
#define DT_N_S_soc_S_adc_42004000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_42004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_42004000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_IRQ_NAME_resrdy_VAL_irq DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_adc_42004000_IRQ_NAME_resrdy_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_IRQ_NAME_resrdy_VAL_priority DT_N_S_soc_S_adc_42004000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_adc_42004000_IRQ_NAME_resrdy_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_COMPAT_MATCHES_atmel_sam0_adc 1
#define DT_N_S_soc_S_adc_42004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_adc_42004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_COMPAT_MODEL_IDX_0 "sam0-adc"
#define DT_N_S_soc_S_adc_42004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_42004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_42004000_P_reg {1107312640 /* 0x42004000 */, 43 /* 0x2b */}
#define DT_N_S_soc_S_adc_42004000_P_reg_IDX_0 1107312640
#define DT_N_S_soc_S_adc_42004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_reg_IDX_1 43
#define DT_N_S_soc_S_adc_42004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, reg, 0) \
	fn(DT_N_S_soc_S_adc_42004000, reg, 1)
#define DT_N_S_soc_S_adc_42004000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, reg, 1)
#define DT_N_S_soc_S_adc_42004000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_interrupts {23 /* 0x17 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_42004000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_adc_42004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_42004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_42004000, interrupts, 1)
#define DT_N_S_soc_S_adc_42004000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, interrupts, 1)
#define DT_N_S_soc_S_adc_42004000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_VAL_clkctrl_id 30
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_adc_42004000_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_bit 16
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_adc_42004000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_adc_42004000_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, clocks, 0) \
	fn(DT_N_S_soc_S_adc_42004000, clocks, 1)
#define DT_N_S_soc_S_adc_42004000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, clocks, 1)
#define DT_N_S_soc_S_adc_42004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42004000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_clocks_LEN 2
#define DT_N_S_soc_S_adc_42004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_adc_42004000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, clock_names, 0) \
	fn(DT_N_S_soc_S_adc_42004000, clock_names, 1)
#define DT_N_S_soc_S_adc_42004000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, clock_names, 1)
#define DT_N_S_soc_S_adc_42004000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42004000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42004000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_clock_names_LEN 2
#define DT_N_S_soc_S_adc_42004000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_gclk 3
#define DT_N_S_soc_S_adc_42004000_P_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_prescaler 4
#define DT_N_S_soc_S_adc_42004000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_compatible {"atmel,sam0-adc"}
#define DT_N_S_soc_S_adc_42004000_P_compatible_IDX_0 "atmel,sam0-adc"
#define DT_N_S_soc_S_adc_42004000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_adc
#define DT_N_S_soc_S_adc_42004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_ADC
#define DT_N_S_soc_S_adc_42004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, compatible, 0)
#define DT_N_S_soc_S_adc_42004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, compatible, 0)
#define DT_N_S_soc_S_adc_42004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_42004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names {"resrdy"}
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_IDX_0 "resrdy"
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_IDX_0_STRING_TOKEN resrdy
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RESRDY
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42004000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42004000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42004000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42004000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_adc_42004000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_adc_42004000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_42004000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dac@42004800
 *
 * Node identifier: DT_N_S_soc_S_dac_42004800
 *
 * Binding (compatible = atmel,sam0-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/atmel,sam0-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_42004800_PATH "/soc/dac@42004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_42004800_FULL_NAME "dac@42004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_42004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_42004800_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_42004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_42004800_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_42004800_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_42004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_42004800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_dac DT_N_S_soc_S_dac_42004800
#define DT_N_NODELABEL_dac0        DT_N_S_soc_S_dac_42004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_42004800_REG_NUM 1
#define DT_N_S_soc_S_dac_42004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_REG_IDX_0_VAL_ADDRESS 1107314688 /* 0x42004800 */
#define DT_N_S_soc_S_dac_42004800_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_dac_42004800_RANGES_NUM 0
#define DT_N_S_soc_S_dac_42004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_42004800_IRQ_NUM 1
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dac_42004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_COMPAT_MATCHES_atmel_sam0_dac 1
#define DT_N_S_soc_S_dac_42004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_dac_42004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_COMPAT_MODEL_IDX_0 "sam0-dac"
#define DT_N_S_soc_S_dac_42004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_42004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dac_42004800_P_reg {1107314688 /* 0x42004800 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_dac_42004800_P_reg_IDX_0 1107314688
#define DT_N_S_soc_S_dac_42004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_reg_IDX_1 16
#define DT_N_S_soc_S_dac_42004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, reg, 0) \
	fn(DT_N_S_soc_S_dac_42004800, reg, 1)
#define DT_N_S_soc_S_dac_42004800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, reg, 1)
#define DT_N_S_soc_S_dac_42004800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_VAL_clkctrl_id 33
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_dac_42004800_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_bit 18
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_dac_42004800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_dac_42004800_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, clocks, 0) \
	fn(DT_N_S_soc_S_dac_42004800, clocks, 1)
#define DT_N_S_soc_S_dac_42004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, clocks, 1)
#define DT_N_S_soc_S_dac_42004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_clocks_LEN 2
#define DT_N_S_soc_S_dac_42004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_dac_42004800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, clock_names, 0) \
	fn(DT_N_S_soc_S_dac_42004800, clock_names, 1)
#define DT_N_S_soc_S_dac_42004800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, clock_names, 1)
#define DT_N_S_soc_S_dac_42004800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_clock_names_LEN 2
#define DT_N_S_soc_S_dac_42004800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_status "disabled"
#define DT_N_S_soc_S_dac_42004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dac_42004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_42004800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dac_42004800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dac_42004800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_42004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, status, 0) \
	fn(DT_N_S_soc_S_dac_42004800, status, 1) \
	fn(DT_N_S_soc_S_dac_42004800, status, 2) \
	fn(DT_N_S_soc_S_dac_42004800, status, 3) \
	fn(DT_N_S_soc_S_dac_42004800, status, 4) \
	fn(DT_N_S_soc_S_dac_42004800, status, 5) \
	fn(DT_N_S_soc_S_dac_42004800, status, 6) \
	fn(DT_N_S_soc_S_dac_42004800, status, 7)
#define DT_N_S_soc_S_dac_42004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 7)
#define DT_N_S_soc_S_dac_42004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_compatible {"atmel,sam0-dac"}
#define DT_N_S_soc_S_dac_42004800_P_compatible_IDX_0 "atmel,sam0-dac"
#define DT_N_S_soc_S_dac_42004800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_dac
#define DT_N_S_soc_S_dac_42004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_DAC
#define DT_N_S_soc_S_dac_42004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, compatible, 0)
#define DT_N_S_soc_S_dac_42004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, compatible, 0)
#define DT_N_S_soc_S_dac_42004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_42004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dac_42004800_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_dac_42004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dac_42004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42004800, interrupts, 0) \
	fn(DT_N_S_soc_S_dac_42004800, interrupts, 1)
#define DT_N_S_soc_S_dac_42004800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42004800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, interrupts, 1)
#define DT_N_S_soc_S_dac_42004800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42004800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_42004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42004800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_42004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dac_42004800_P_wakeup_source 0
#define DT_N_S_soc_S_dac_42004800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dmac@41004800
 *
 * Node identifier: DT_N_S_soc_S_dmac_41004800
 *
 * Binding (compatible = atmel,sam0-dmac):
 *   $ZEPHYR_BASE/dts/bindings/dma/atmel,sam0-dmac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dmac_41004800_PATH "/soc/dmac@41004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dmac_41004800_FULL_NAME "dmac@41004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dmac_41004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dmac_41004800_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmac_41004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dmac_41004800_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dmac_41004800_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dmac_41004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dmac_41004800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_dmac DT_N_S_soc_S_dmac_41004800
#define DT_N_NODELABEL_dmac         DT_N_S_soc_S_dmac_41004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dmac_41004800_REG_NUM 1
#define DT_N_S_soc_S_dmac_41004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_REG_IDX_0_VAL_ADDRESS 1090537472 /* 0x41004800 */
#define DT_N_S_soc_S_dmac_41004800_REG_IDX_0_VAL_SIZE 80 /* 0x50 */
#define DT_N_S_soc_S_dmac_41004800_RANGES_NUM 0
#define DT_N_S_soc_S_dmac_41004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dmac_41004800_IRQ_NUM 1
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dmac_41004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_COMPAT_MATCHES_atmel_sam0_dmac 1
#define DT_N_S_soc_S_dmac_41004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_dmac_41004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_COMPAT_MODEL_IDX_0 "sam0-dmac"
#define DT_N_S_soc_S_dmac_41004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dmac_41004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dmac_41004800_P_reg {1090537472 /* 0x41004800 */, 80 /* 0x50 */}
#define DT_N_S_soc_S_dmac_41004800_P_reg_IDX_0 1090537472
#define DT_N_S_soc_S_dmac_41004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_reg_IDX_1 80
#define DT_N_S_soc_S_dmac_41004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmac_41004800, reg, 0) \
	fn(DT_N_S_soc_S_dmac_41004800, reg, 1)
#define DT_N_S_soc_S_dmac_41004800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmac_41004800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dmac_41004800, reg, 1)
#define DT_N_S_soc_S_dmac_41004800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmac_41004800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmac_41004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmac_41004800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dmac_41004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmac_41004800, interrupts, 0) \
	fn(DT_N_S_soc_S_dmac_41004800, interrupts, 1)
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmac_41004800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dmac_41004800, interrupts, 1)
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmac_41004800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmac_41004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmac_41004800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dmac_41004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_compatible {"atmel,sam0-dmac"}
#define DT_N_S_soc_S_dmac_41004800_P_compatible_IDX_0 "atmel,sam0-dmac"
#define DT_N_S_soc_S_dmac_41004800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_dmac
#define DT_N_S_soc_S_dmac_41004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_DMAC
#define DT_N_S_soc_S_dmac_41004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmac_41004800, compatible, 0)
#define DT_N_S_soc_S_dmac_41004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmac_41004800, compatible, 0)
#define DT_N_S_soc_S_dmac_41004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmac_41004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmac_41004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_41004800_P_compatible_LEN 1
#define DT_N_S_soc_S_dmac_41004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dmac_41004800_P_wakeup_source 0
#define DT_N_S_soc_S_dmac_41004800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/eic@40001800
 *
 * Node identifier: DT_N_S_soc_S_eic_40001800
 *
 * Binding (compatible = atmel,sam0-eic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/atmel,sam0-eic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_eic_40001800_PATH "/soc/eic@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_eic_40001800_FULL_NAME "eic@40001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_eic_40001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_eic_40001800_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_eic_40001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_eic_40001800_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_eic_40001800_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_eic_40001800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_eic_40001800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_eic DT_N_S_soc_S_eic_40001800
#define DT_N_NODELABEL_eic         DT_N_S_soc_S_eic_40001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_eic_40001800_REG_NUM 1
#define DT_N_S_soc_S_eic_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_eic_40001800_REG_IDX_0_VAL_SIZE 28 /* 0x1c */
#define DT_N_S_soc_S_eic_40001800_RANGES_NUM 0
#define DT_N_S_soc_S_eic_40001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_eic_40001800_IRQ_NUM 1
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_eic_40001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_COMPAT_MATCHES_atmel_sam0_eic 1
#define DT_N_S_soc_S_eic_40001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_eic_40001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_COMPAT_MODEL_IDX_0 "sam0-eic"
#define DT_N_S_soc_S_eic_40001800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_eic_40001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_eic_40001800_P_reg {1073747968 /* 0x40001800 */, 28 /* 0x1c */}
#define DT_N_S_soc_S_eic_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_eic_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_reg_IDX_1 28
#define DT_N_S_soc_S_eic_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eic_40001800, reg, 0) \
	fn(DT_N_S_soc_S_eic_40001800, reg, 1)
#define DT_N_S_soc_S_eic_40001800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eic_40001800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eic_40001800, reg, 1)
#define DT_N_S_soc_S_eic_40001800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eic_40001800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_eic_40001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eic_40001800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eic_40001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_eic_40001800_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_eic_40001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_eic_40001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eic_40001800, interrupts, 0) \
	fn(DT_N_S_soc_S_eic_40001800, interrupts, 1)
#define DT_N_S_soc_S_eic_40001800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eic_40001800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eic_40001800, interrupts, 1)
#define DT_N_S_soc_S_eic_40001800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eic_40001800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_eic_40001800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eic_40001800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eic_40001800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_compatible {"atmel,sam0-eic"}
#define DT_N_S_soc_S_eic_40001800_P_compatible_IDX_0 "atmel,sam0-eic"
#define DT_N_S_soc_S_eic_40001800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_eic
#define DT_N_S_soc_S_eic_40001800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_EIC
#define DT_N_S_soc_S_eic_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eic_40001800, compatible, 0)
#define DT_N_S_soc_S_eic_40001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eic_40001800, compatible, 0)
#define DT_N_S_soc_S_eic_40001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eic_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eic_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_eic_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_eic_40001800_P_wakeup_source 0
#define DT_N_S_soc_S_eic_40001800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41004400
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41004400
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41004400_PATH "/soc/pinmux@41004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41004400_FULL_NAME "pinmux@41004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41004400_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41004400_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41004400_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41004400_EXISTS 1
#define DT_N_INST_0_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41004400
#define DT_N_NODELABEL_pinmux_a       DT_N_S_soc_S_pinmux_41004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41004400_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_REG_IDX_0_VAL_ADDRESS 1090536448 /* 0x41004400 */
#define DT_N_S_soc_S_pinmux_41004400_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41004400_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41004400_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41004400_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41004400_P_reg {1090536448 /* 0x41004400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41004400_P_reg_IDX_0 1090536448
#define DT_N_S_soc_S_pinmux_41004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41004400, reg, 0) \
	fn(DT_N_S_soc_S_pinmux_41004400, reg, 1)
#define DT_N_S_soc_S_pinmux_41004400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41004400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinmux_41004400, reg, 1)
#define DT_N_S_soc_S_pinmux_41004400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41004400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinmux_41004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41004400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinmux_41004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41004400, compatible, 0)
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41004400, compatible, 0)
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004400_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41004480
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41004480
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41004480_PATH "/soc/pinmux@41004480"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41004480_FULL_NAME "pinmux@41004480"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41004480_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41004480_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41004480_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41004480_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41004480_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41004480_EXISTS 1
#define DT_N_INST_1_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41004480
#define DT_N_NODELABEL_pinmux_b       DT_N_S_soc_S_pinmux_41004480

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41004480_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41004480_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_REG_IDX_0_VAL_ADDRESS 1090536576 /* 0x41004480 */
#define DT_N_S_soc_S_pinmux_41004480_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41004480_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41004480_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41004480_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41004480_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41004480_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41004480_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41004480_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41004480_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41004480_P_reg {1090536576 /* 0x41004480 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41004480_P_reg_IDX_0 1090536576
#define DT_N_S_soc_S_pinmux_41004480_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41004480_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41004480, reg, 0) \
	fn(DT_N_S_soc_S_pinmux_41004480, reg, 1)
#define DT_N_S_soc_S_pinmux_41004480_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41004480, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinmux_41004480, reg, 1)
#define DT_N_S_soc_S_pinmux_41004480_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41004480, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinmux_41004480, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004480_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41004480, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinmux_41004480, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004480_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41004480, compatible, 0)
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41004480, compatible, 0)
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41004480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41004480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41004480_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41004480_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41004480_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40001400
 *
 * Node identifier: DT_N_S_soc_S_rtc_40001400
 *
 * Binding (compatible = atmel,sam0-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/atmel,sam0-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40001400_PATH "/soc/rtc@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40001400_FULL_NAME "rtc@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40001400_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40001400_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40001400_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40001400_EXISTS 1
#define DT_N_INST_0_atmel_sam0_rtc DT_N_S_soc_S_rtc_40001400
#define DT_N_NODELABEL_rtc         DT_N_S_soc_S_rtc_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40001400_REG_NUM 1
#define DT_N_S_soc_S_rtc_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_rtc_40001400_REG_IDX_0_VAL_SIZE 28 /* 0x1c */
#define DT_N_S_soc_S_rtc_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_COMPAT_MATCHES_atmel_sam0_rtc 1
#define DT_N_S_soc_S_rtc_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_rtc_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_COMPAT_MODEL_IDX_0 "sam0-rtc"
#define DT_N_S_soc_S_rtc_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40001400_P_reg {1073746944 /* 0x40001400 */, 28 /* 0x1c */}
#define DT_N_S_soc_S_rtc_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_rtc_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_reg_IDX_1 28
#define DT_N_S_soc_S_rtc_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40001400, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40001400, reg, 1)
#define DT_N_S_soc_S_rtc_40001400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40001400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, reg, 1)
#define DT_N_S_soc_S_rtc_40001400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40001400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40001400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_clock_generator 0
#define DT_N_S_soc_S_rtc_40001400_P_clock_generator_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_interrupts {3 /* 0x3 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40001400, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40001400, interrupts, 1)
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40001400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, interrupts, 1)
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40001400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40001400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_status "disabled"
#define DT_N_S_soc_S_rtc_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40001400, status, 0) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 1) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 2) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 3) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 4) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 5) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 6) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 7)
#define DT_N_S_soc_S_rtc_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40001400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 7)
#define DT_N_S_soc_S_rtc_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40001400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40001400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40001400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40001400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_compatible {"atmel,sam0-rtc"}
#define DT_N_S_soc_S_rtc_40001400_P_compatible_IDX_0 "atmel,sam0-rtc"
#define DT_N_S_soc_S_rtc_40001400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_rtc
#define DT_N_S_soc_S_rtc_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_RTC
#define DT_N_S_soc_S_rtc_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40001400, compatible, 0)
#define DT_N_S_soc_S_rtc_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40001400, compatible, 0)
#define DT_N_S_soc_S_rtc_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40001400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom0_uart_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_PATH "/soc/pinctrl@41004400/sercom0_uart_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FULL_NAME "sercom0_uart_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_SUPPORTS_ORDS \
	30, /* /soc/sercom@42000800 */ \
	51, /* /soc/pinctrl@41004400/sercom0_uart_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_EXISTS 1
#define DT_N_NODELABEL_sercom0_uart_default DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@42000800
 *
 * Node identifier: DT_N_S_soc_S_sercom_42000800
 *
 * Binding (compatible = atmel,sam0-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/atmel,sam0-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42000800_PATH "/soc/sercom@42000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42000800_FULL_NAME "sercom@42000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42000800_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42000800_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42000800_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	29, /* /soc/pinctrl@41004400/sercom0_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42000800_EXISTS 1
#define DT_N_ALIAS_sercom_0         DT_N_S_soc_S_sercom_42000800
#define DT_N_INST_0_atmel_sam0_uart DT_N_S_soc_S_sercom_42000800
#define DT_N_NODELABEL_sercom0      DT_N_S_soc_S_sercom_42000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42000800_REG_NUM 1
#define DT_N_S_soc_S_sercom_42000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_REG_IDX_0_VAL_ADDRESS 1107298304 /* 0x42000800 */
#define DT_N_S_soc_S_sercom_42000800_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42000800_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42000800_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_COMPAT_MATCHES_atmel_sam0_uart 1
#define DT_N_S_soc_S_sercom_42000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_COMPAT_MODEL_IDX_0 "sam0-uart"
#define DT_N_S_soc_S_sercom_42000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_42000800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42000800_P_reg {1107298304 /* 0x42000800 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42000800_P_reg_IDX_0 1107298304
#define DT_N_S_soc_S_sercom_42000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42000800, reg, 1)
#define DT_N_S_soc_S_sercom_42000800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, reg, 1)
#define DT_N_S_soc_S_sercom_42000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42000800, interrupts, 1)
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, interrupts, 1)
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_VAL_clkctrl_id 20
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_bit 2
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42000800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42000800_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42000800, clocks, 1)
#define DT_N_S_soc_S_sercom_42000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, clocks, 1)
#define DT_N_S_soc_S_sercom_42000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42000800, clock_names, 1)
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, clock_names, 1)
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42000800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_rxpo 3
#define DT_N_S_soc_S_sercom_42000800_P_rxpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_txpo 2
#define DT_N_S_soc_S_sercom_42000800_P_txpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_collision_detection 0
#define DT_N_S_soc_S_sercom_42000800_P_collision_detection_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_current_speed 9600
#define DT_N_S_soc_S_sercom_42000800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_hw_flow_control 0
#define DT_N_S_soc_S_sercom_42000800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_status "okay"
#define DT_N_S_soc_S_sercom_42000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_42000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42000800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_42000800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sercom_42000800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, status, 0) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 1) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 2) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 3)
#define DT_N_S_soc_S_sercom_42000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 3)
#define DT_N_S_soc_S_sercom_42000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_compatible {"atmel,sam0-uart"}
#define DT_N_S_soc_S_sercom_42000800_P_compatible_IDX_0 "atmel,sam0-uart"
#define DT_N_S_soc_S_sercom_42000800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_uart
#define DT_N_S_soc_S_sercom_42000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_UART
#define DT_N_S_soc_S_sercom_42000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, compatible, 0)
#define DT_N_S_soc_S_sercom_42000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, compatible, 0)
#define DT_N_S_soc_S_sercom_42000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_42000800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom1_uart_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_PATH "/soc/pinctrl@41004400/sercom1_uart_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FULL_NAME "sercom1_uart_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_SUPPORTS_ORDS \
	32, /* /soc/sercom@42000c00 */ \
	52, /* /soc/pinctrl@41004400/sercom1_uart_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_EXISTS 1
#define DT_N_NODELABEL_sercom1_uart_default DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@42000c00
 *
 * Node identifier: DT_N_S_soc_S_sercom_42000c00
 *
 * Binding (compatible = atmel,sam0-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/atmel,sam0-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42000c00_PATH "/soc/sercom@42000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42000c00_FULL_NAME "sercom@42000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42000c00_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42000c00_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42000c00_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	31, /* /soc/pinctrl@41004400/sercom1_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42000c00_EXISTS 1
#define DT_N_ALIAS_sercom_1         DT_N_S_soc_S_sercom_42000c00
#define DT_N_INST_1_atmel_sam0_uart DT_N_S_soc_S_sercom_42000c00
#define DT_N_NODELABEL_sercom1      DT_N_S_soc_S_sercom_42000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42000c00_REG_NUM 1
#define DT_N_S_soc_S_sercom_42000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_REG_IDX_0_VAL_ADDRESS 1107299328 /* 0x42000c00 */
#define DT_N_S_soc_S_sercom_42000c00_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42000c00_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42000c00_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_COMPAT_MATCHES_atmel_sam0_uart 1
#define DT_N_S_soc_S_sercom_42000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_COMPAT_MODEL_IDX_0 "sam0-uart"
#define DT_N_S_soc_S_sercom_42000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_42000c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42000c00_P_reg {1107299328 /* 0x42000c00 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42000c00_P_reg_IDX_0 1107299328
#define DT_N_S_soc_S_sercom_42000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42000c00, reg, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, reg, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts {10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_VAL_clkctrl_id 21
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_bit 3
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42000c00_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42000c00, clocks, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, clocks, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42000c00_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_rxpo 3
#define DT_N_S_soc_S_sercom_42000c00_P_rxpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_txpo 0
#define DT_N_S_soc_S_sercom_42000c00_P_txpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_collision_detection 0
#define DT_N_S_soc_S_sercom_42000c00_P_collision_detection_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_current_speed 115200
#define DT_N_S_soc_S_sercom_42000c00_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_hw_flow_control 0
#define DT_N_S_soc_S_sercom_42000c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_status "okay"
#define DT_N_S_soc_S_sercom_42000c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_42000c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42000c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_42000c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sercom_42000c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, status, 0) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 1) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 2) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 3)
#define DT_N_S_soc_S_sercom_42000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 3)
#define DT_N_S_soc_S_sercom_42000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42000c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_compatible {"atmel,sam0-uart"}
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_IDX_0 "atmel,sam0-uart"
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_uart
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_UART
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, compatible, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, compatible, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42000c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_42000c00_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom2_i2c_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_PATH "/soc/pinctrl@41004400/sercom2_i2c_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FULL_NAME "sercom2_i2c_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_SUPPORTS_ORDS \
	34, /* /soc/sercom@42001000 */ \
	53, /* /soc/pinctrl@41004400/sercom2_i2c_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_EXISTS 1
#define DT_N_NODELABEL_sercom2_i2c_default DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@42001000
 *
 * Node identifier: DT_N_S_soc_S_sercom_42001000
 *
 * Binding (compatible = atmel,sam0-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/atmel,sam0-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42001000_PATH "/soc/sercom@42001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42001000_FULL_NAME "sercom@42001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42001000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42001000_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42001000_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	33, /* /soc/pinctrl@41004400/sercom2_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42001000_EXISTS 1
#define DT_N_ALIAS_sercom_2        DT_N_S_soc_S_sercom_42001000
#define DT_N_ALIAS_i2c_0           DT_N_S_soc_S_sercom_42001000
#define DT_N_INST_0_atmel_sam0_i2c DT_N_S_soc_S_sercom_42001000
#define DT_N_NODELABEL_sercom2     DT_N_S_soc_S_sercom_42001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42001000_REG_NUM 1
#define DT_N_S_soc_S_sercom_42001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_REG_IDX_0_VAL_ADDRESS 1107300352 /* 0x42001000 */
#define DT_N_S_soc_S_sercom_42001000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42001000_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42001000_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_COMPAT_MATCHES_atmel_sam0_i2c 1
#define DT_N_S_soc_S_sercom_42001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_COMPAT_MODEL_IDX_0 "sam0-i2c"
#define DT_N_S_soc_S_sercom_42001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_42001000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42001000_P_reg {1107300352 /* 0x42001000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42001000_P_reg_IDX_0 1107300352
#define DT_N_S_soc_S_sercom_42001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42001000, reg, 1)
#define DT_N_S_soc_S_sercom_42001000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, reg, 1)
#define DT_N_S_soc_S_sercom_42001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42001000, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_VAL_clkctrl_id 22
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_bit 4
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42001000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42001000_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42001000, clocks, 1)
#define DT_N_S_soc_S_sercom_42001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, clocks, 1)
#define DT_N_S_soc_S_sercom_42001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42001000, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42001000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_clock_frequency 400000
#define DT_N_S_soc_S_sercom_42001000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_status "okay"
#define DT_N_S_soc_S_sercom_42001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_42001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_42001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sercom_42001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, status, 0) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 1) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 2) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 3)
#define DT_N_S_soc_S_sercom_42001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 3)
#define DT_N_S_soc_S_sercom_42001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_compatible {"atmel,sam0-i2c"}
#define DT_N_S_soc_S_sercom_42001000_P_compatible_IDX_0 "atmel,sam0-i2c"
#define DT_N_S_soc_S_sercom_42001000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_i2c
#define DT_N_S_soc_S_sercom_42001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_I2C
#define DT_N_S_soc_S_sercom_42001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, compatible, 0)
#define DT_N_S_soc_S_sercom_42001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, compatible, 0)
#define DT_N_S_soc_S_sercom_42001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_42001000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom3_uart_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_PATH "/soc/pinctrl@41004400/sercom3_uart_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FULL_NAME "sercom3_uart_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_SUPPORTS_ORDS \
	36, /* /soc/sercom@42001400 */ \
	54, /* /soc/pinctrl@41004400/sercom3_uart_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_EXISTS 1
#define DT_N_NODELABEL_sercom3_uart_default DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@42001400
 *
 * Node identifier: DT_N_S_soc_S_sercom_42001400
 *
 * Binding (compatible = atmel,sam0-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/atmel,sam0-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42001400_PATH "/soc/sercom@42001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42001400_FULL_NAME "sercom@42001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42001400_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42001400_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42001400_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	35, /* /soc/pinctrl@41004400/sercom3_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42001400_EXISTS 1
#define DT_N_ALIAS_sercom_3         DT_N_S_soc_S_sercom_42001400
#define DT_N_INST_2_atmel_sam0_uart DT_N_S_soc_S_sercom_42001400
#define DT_N_NODELABEL_sercom3      DT_N_S_soc_S_sercom_42001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42001400_REG_NUM 1
#define DT_N_S_soc_S_sercom_42001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_REG_IDX_0_VAL_ADDRESS 1107301376 /* 0x42001400 */
#define DT_N_S_soc_S_sercom_42001400_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42001400_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42001400_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_COMPAT_MATCHES_atmel_sam0_uart 1
#define DT_N_S_soc_S_sercom_42001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_COMPAT_MODEL_IDX_0 "sam0-uart"
#define DT_N_S_soc_S_sercom_42001400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_42001400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42001400_P_reg {1107301376 /* 0x42001400 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42001400_P_reg_IDX_0 1107301376
#define DT_N_S_soc_S_sercom_42001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42001400, reg, 1)
#define DT_N_S_soc_S_sercom_42001400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, reg, 1)
#define DT_N_S_soc_S_sercom_42001400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_interrupts {12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42001400, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_VAL_clkctrl_id 23
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_bit 5
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42001400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42001400_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42001400, clocks, 1)
#define DT_N_S_soc_S_sercom_42001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, clocks, 1)
#define DT_N_S_soc_S_sercom_42001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42001400, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42001400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_rxpo 1
#define DT_N_S_soc_S_sercom_42001400_P_rxpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_txpo 0
#define DT_N_S_soc_S_sercom_42001400_P_txpo_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_collision_detection 0
#define DT_N_S_soc_S_sercom_42001400_P_collision_detection_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_current_speed 115200
#define DT_N_S_soc_S_sercom_42001400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_hw_flow_control 0
#define DT_N_S_soc_S_sercom_42001400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_status "okay"
#define DT_N_S_soc_S_sercom_42001400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_42001400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_42001400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sercom_42001400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, status, 0) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 1) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 2) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 3)
#define DT_N_S_soc_S_sercom_42001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 3)
#define DT_N_S_soc_S_sercom_42001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_compatible {"atmel,sam0-uart"}
#define DT_N_S_soc_S_sercom_42001400_P_compatible_IDX_0 "atmel,sam0-uart"
#define DT_N_S_soc_S_sercom_42001400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_uart
#define DT_N_S_soc_S_sercom_42001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_UART
#define DT_N_S_soc_S_sercom_42001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, compatible, 0)
#define DT_N_S_soc_S_sercom_42001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, compatible, 0)
#define DT_N_S_soc_S_sercom_42001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_42001400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/sercom@42001800
 *
 * Node identifier: DT_N_S_soc_S_sercom_42001800
 *
 * Binding (compatible = atmel,sam0-sercom):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-sercom.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42001800_PATH "/soc/sercom@42001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42001800_FULL_NAME "sercom@42001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42001800_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42001800_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42001800_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42001800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42001800_EXISTS 1
#define DT_N_ALIAS_sercom_4           DT_N_S_soc_S_sercom_42001800
#define DT_N_INST_0_atmel_sam0_sercom DT_N_S_soc_S_sercom_42001800
#define DT_N_NODELABEL_sercom4        DT_N_S_soc_S_sercom_42001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42001800_REG_NUM 1
#define DT_N_S_soc_S_sercom_42001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_REG_IDX_0_VAL_ADDRESS 1107302400 /* 0x42001800 */
#define DT_N_S_soc_S_sercom_42001800_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42001800_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42001800_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_COMPAT_MATCHES_atmel_sam0_sercom 1
#define DT_N_S_soc_S_sercom_42001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_COMPAT_MODEL_IDX_0 "sam0-sercom"
#define DT_N_S_soc_S_sercom_42001800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42001800_P_reg {1107302400 /* 0x42001800 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42001800_P_reg_IDX_0 1107302400
#define DT_N_S_soc_S_sercom_42001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42001800, reg, 1)
#define DT_N_S_soc_S_sercom_42001800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, reg, 1)
#define DT_N_S_soc_S_sercom_42001800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_interrupts {13 /* 0xd */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42001800, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_VAL_clkctrl_id 24
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_bit 6
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42001800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42001800_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42001800, clocks, 1)
#define DT_N_S_soc_S_sercom_42001800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, clocks, 1)
#define DT_N_S_soc_S_sercom_42001800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_status "disabled"
#define DT_N_S_soc_S_sercom_42001800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_42001800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_42001800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_42001800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sercom_42001800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_42001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, status, 0) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 1) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 2) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 3) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 4) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 5) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 6) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 7)
#define DT_N_S_soc_S_sercom_42001800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 7)
#define DT_N_S_soc_S_sercom_42001800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_compatible {"atmel,sam0-sercom"}
#define DT_N_S_soc_S_sercom_42001800_P_compatible_IDX_0 "atmel,sam0-sercom"
#define DT_N_S_soc_S_sercom_42001800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_sercom
#define DT_N_S_soc_S_sercom_42001800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SERCOM
#define DT_N_S_soc_S_sercom_42001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, compatible, 0)
#define DT_N_S_soc_S_sercom_42001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, compatible, 0)
#define DT_N_S_soc_S_sercom_42001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001800, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42001800, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42001800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42001800_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42001800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom5_spi_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_PATH "/soc/pinctrl@41004400/sercom5_spi_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FULL_NAME "sercom5_spi_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_SUPPORTS_ORDS \
	39, /* /soc/sercom@42001c00 */ \
	55, /* /soc/pinctrl@41004400/sercom5_spi_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_EXISTS 1
#define DT_N_NODELABEL_sercom5_spi_default DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@42001c00
 *
 * Node identifier: DT_N_S_soc_S_sercom_42001c00
 *
 * Binding (compatible = atmel,sam0-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/atmel,sam0-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_42001c00_PATH "/soc/sercom@42001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_42001c00_FULL_NAME "sercom@42001c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_42001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_42001c00_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_42001c00_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_42001c00_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */ \
	38, /* /soc/pinctrl@41004400/sercom5_spi_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_42001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_42001c00_EXISTS 1
#define DT_N_ALIAS_sercom_5        DT_N_S_soc_S_sercom_42001c00
#define DT_N_INST_0_atmel_sam0_spi DT_N_S_soc_S_sercom_42001c00
#define DT_N_NODELABEL_sercom5     DT_N_S_soc_S_sercom_42001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_42001c00_REG_NUM 1
#define DT_N_S_soc_S_sercom_42001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_REG_IDX_0_VAL_ADDRESS 1107303424 /* 0x42001c00 */
#define DT_N_S_soc_S_sercom_42001c00_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_42001c00_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_42001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_42001c00_IRQ_NUM 1
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_42001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_COMPAT_MATCHES_atmel_sam0_spi 1
#define DT_N_S_soc_S_sercom_42001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_42001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_COMPAT_MODEL_IDX_0 "sam0-spi"
#define DT_N_S_soc_S_sercom_42001c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_42001c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_42001c00_P_reg {1107303424 /* 0x42001c00 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_42001c00_P_reg_IDX_0 1107303424
#define DT_N_S_soc_S_sercom_42001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_42001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, reg, 0) \
	fn(DT_N_S_soc_S_sercom_42001c00, reg, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, reg, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_VAL_clkctrl_id 25
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_bit 7
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_sercom_42001c00_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_42001c00, clocks, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, clocks, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_42001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_42001c00_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_dipo 0
#define DT_N_S_soc_S_sercom_42001c00_P_dipo_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_dopo 2
#define DT_N_S_soc_S_sercom_42001c00_P_dopo_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_status "okay"
#define DT_N_S_soc_S_sercom_42001c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_42001c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_42001c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sercom_42001c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_42001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, status, 0) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 1) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 2) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 3)
#define DT_N_S_soc_S_sercom_42001c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 3)
#define DT_N_S_soc_S_sercom_42001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_compatible {"atmel,sam0-spi"}
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_IDX_0 "atmel,sam0-spi"
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_spi
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SPI
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, compatible, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, compatible, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_42001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 0) \
	fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 1)
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_42001c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_42001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_42001c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_42001c00_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/tc@42003000
 *
 * Node identifier: DT_N_S_soc_S_tc_42003000
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/timer/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_42003000_PATH "/soc/tc@42003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_42003000_FULL_NAME "tc@42003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_42003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_42003000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_42003000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_42003000_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_42003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_42003000_EXISTS 1
#define DT_N_ALIAS_tc_4             DT_N_S_soc_S_tc_42003000
#define DT_N_INST_0_atmel_sam0_tc32 DT_N_S_soc_S_tc_42003000
#define DT_N_NODELABEL_tc4          DT_N_S_soc_S_tc_42003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_42003000_REG_NUM 1
#define DT_N_S_soc_S_tc_42003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_REG_IDX_0_VAL_ADDRESS 1107308544 /* 0x42003000 */
#define DT_N_S_soc_S_tc_42003000_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_tc_42003000_RANGES_NUM 0
#define DT_N_S_soc_S_tc_42003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_42003000_IRQ_NUM 1
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_42003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_42003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_42003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_42003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_42003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_42003000_P_reg {1107308544 /* 0x42003000 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_tc_42003000_P_reg_IDX_0 1107308544
#define DT_N_S_soc_S_tc_42003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_reg_IDX_1 32
#define DT_N_S_soc_S_tc_42003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003000, reg, 0) \
	fn(DT_N_S_soc_S_tc_42003000, reg, 1)
#define DT_N_S_soc_S_tc_42003000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, reg, 1)
#define DT_N_S_soc_S_tc_42003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_42003000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_tc_42003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_42003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003000, interrupts, 0) \
	fn(DT_N_S_soc_S_tc_42003000, interrupts, 1)
#define DT_N_S_soc_S_tc_42003000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, interrupts, 1)
#define DT_N_S_soc_S_tc_42003000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_VAL_clkctrl_id 28
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_tc_42003000_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_bit 12
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_tc_42003000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_42003000_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003000, clocks, 0) \
	fn(DT_N_S_soc_S_tc_42003000, clocks, 1)
#define DT_N_S_soc_S_tc_42003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, clocks, 1)
#define DT_N_S_soc_S_tc_42003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_42003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_tc_42003000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003000, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_42003000, clock_names, 1)
#define DT_N_S_soc_S_tc_42003000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, clock_names, 1)
#define DT_N_S_soc_S_tc_42003000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_42003000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_42003000_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_42003000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_42003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_42003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003000, compatible, 0)
#define DT_N_S_soc_S_tc_42003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003000, compatible, 0)
#define DT_N_S_soc_S_tc_42003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003000_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_42003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_42003000_P_wakeup_source 0
#define DT_N_S_soc_S_tc_42003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/tc@42003800
 *
 * Node identifier: DT_N_S_soc_S_tc_42003800
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/timer/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_42003800_PATH "/soc/tc@42003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_42003800_FULL_NAME "tc@42003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_42003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_42003800_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_42003800_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_42003800_REQUIRES_ORDS \
	6, /* /soc */ \
	16, /* /soc/gclk@40000c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pm@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_42003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_42003800_EXISTS 1
#define DT_N_ALIAS_tc_6             DT_N_S_soc_S_tc_42003800
#define DT_N_INST_1_atmel_sam0_tc32 DT_N_S_soc_S_tc_42003800
#define DT_N_NODELABEL_tc6          DT_N_S_soc_S_tc_42003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_42003800_REG_NUM 1
#define DT_N_S_soc_S_tc_42003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_REG_IDX_0_VAL_ADDRESS 1107310592 /* 0x42003800 */
#define DT_N_S_soc_S_tc_42003800_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_tc_42003800_RANGES_NUM 0
#define DT_N_S_soc_S_tc_42003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_42003800_IRQ_NUM 1
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_42003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_42003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_42003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_42003800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_42003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_42003800_P_reg {1107310592 /* 0x42003800 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_tc_42003800_P_reg_IDX_0 1107310592
#define DT_N_S_soc_S_tc_42003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_reg_IDX_1 32
#define DT_N_S_soc_S_tc_42003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003800, reg, 0) \
	fn(DT_N_S_soc_S_tc_42003800, reg, 1)
#define DT_N_S_soc_S_tc_42003800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, reg, 1)
#define DT_N_S_soc_S_tc_42003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_42003800_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_tc_42003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_42003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003800, interrupts, 0) \
	fn(DT_N_S_soc_S_tc_42003800, interrupts, 1)
#define DT_N_S_soc_S_tc_42003800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, interrupts, 1)
#define DT_N_S_soc_S_tc_42003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_VAL_clkctrl_id 29
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40000c00
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_gclk_VAL_clkctrl_id DT_N_S_soc_S_tc_42003800_P_clocks_IDX_0_VAL_clkctrl_id
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_gclk_VAL_clkctrl_id_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_bit 14
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_NAME "PM"
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_PH DT_N_S_soc_S_pm_40000400
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_VAL_offset DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_VAL_bit DT_N_S_soc_S_tc_42003800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_42003800_P_clocks_NAME_pm_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003800, clocks, 0) \
	fn(DT_N_S_soc_S_tc_42003800, clocks, 1)
#define DT_N_S_soc_S_tc_42003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, clocks, 1)
#define DT_N_S_soc_S_tc_42003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_42003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clock_names {"GCLK", "PM"}
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_1 "PM"
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_1_STRING_TOKEN PM
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_1_STRING_UPPER_TOKEN PM
#define DT_N_S_soc_S_tc_42003800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003800, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_42003800, clock_names, 1)
#define DT_N_S_soc_S_tc_42003800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, clock_names, 1)
#define DT_N_S_soc_S_tc_42003800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42003800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42003800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_42003800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_42003800_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_42003800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_42003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_42003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42003800, compatible, 0)
#define DT_N_S_soc_S_tc_42003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42003800, compatible, 0)
#define DT_N_S_soc_S_tc_42003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42003800_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_42003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_42003800_P_wakeup_source 0
#define DT_N_S_soc_S_tc_42003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/tcc@42002400
 *
 * Node identifier: DT_N_S_soc_S_tcc_42002400
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_42002400_PATH "/soc/tcc@42002400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_42002400_FULL_NAME "tcc@42002400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_42002400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_42002400_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_42002400_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_42002400_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_42002400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_42002400_EXISTS 1
#define DT_N_INST_0_atmel_sam0_tcc DT_N_S_soc_S_tcc_42002400
#define DT_N_NODELABEL_tcc1        DT_N_S_soc_S_tcc_42002400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_42002400_REG_NUM 1
#define DT_N_S_soc_S_tcc_42002400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_REG_IDX_0_VAL_ADDRESS 1107305472 /* 0x42002400 */
#define DT_N_S_soc_S_tcc_42002400_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_tcc_42002400_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_42002400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_42002400_IRQ_NUM 1
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_42002400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_42002400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_42002400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_42002400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_42002400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_42002400_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_42002400_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_42002400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_42002400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_42002400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002400, compatible, 0)
#define DT_N_S_soc_S_tcc_42002400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002400, compatible, 0)
#define DT_N_S_soc_S_tcc_42002400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_42002400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_reg {1107305472 /* 0x42002400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_tcc_42002400_P_reg_IDX_0 1107305472
#define DT_N_S_soc_S_tcc_42002400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_reg_IDX_1 128
#define DT_N_S_soc_S_tcc_42002400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002400, reg, 0) \
	fn(DT_N_S_soc_S_tcc_42002400, reg, 1)
#define DT_N_S_soc_S_tcc_42002400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002400, reg, 1)
#define DT_N_S_soc_S_tcc_42002400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002400, interrupts, 0) \
	fn(DT_N_S_soc_S_tcc_42002400, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002400, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002400_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/tcc@42002800
 *
 * Node identifier: DT_N_S_soc_S_tcc_42002800
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_42002800_PATH "/soc/tcc@42002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_42002800_FULL_NAME "tcc@42002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_42002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_42002800_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_42002800_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_42002800_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_42002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_42002800_EXISTS 1
#define DT_N_INST_1_atmel_sam0_tcc DT_N_S_soc_S_tcc_42002800
#define DT_N_NODELABEL_tcc2        DT_N_S_soc_S_tcc_42002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_42002800_REG_NUM 1
#define DT_N_S_soc_S_tcc_42002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_REG_IDX_0_VAL_ADDRESS 1107306496 /* 0x42002800 */
#define DT_N_S_soc_S_tcc_42002800_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_tcc_42002800_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_42002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_42002800_IRQ_NUM 1
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_42002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_42002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_42002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_42002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_42002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_42002800_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_42002800_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_42002800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_42002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_42002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002800, compatible, 0)
#define DT_N_S_soc_S_tcc_42002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002800, compatible, 0)
#define DT_N_S_soc_S_tcc_42002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_42002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_reg {1107306496 /* 0x42002800 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_tcc_42002800_P_reg_IDX_0 1107306496
#define DT_N_S_soc_S_tcc_42002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_reg_IDX_1 128
#define DT_N_S_soc_S_tcc_42002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002800, reg, 0) \
	fn(DT_N_S_soc_S_tcc_42002800, reg, 1)
#define DT_N_S_soc_S_tcc_42002800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002800, reg, 1)
#define DT_N_S_soc_S_tcc_42002800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42002800, interrupts, 0) \
	fn(DT_N_S_soc_S_tcc_42002800, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42002800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002800, interrupts, 1)
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42002800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_42002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42002800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_42002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42002800_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv6m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv6m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv6m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv6m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv6m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv6m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV6M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/usb_dc_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_PATH "/soc/pinctrl@41004400/usb_dc_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FULL_NAME "usb_dc_default"

/* Node parent (/soc/pinctrl@41004400) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_PARENT DT_N_S_soc_S_pinctrl_41004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_REQUIRES_ORDS \
	7, /* /soc/pinctrl@41004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_SUPPORTS_ORDS \
	46, /* /soc/usb@41005000 */ \
	56, /* /soc/pinctrl@41004400/usb_dc_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_EXISTS 1
#define DT_N_NODELABEL_usb_dc_default DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usb@41005000
 *
 * Node identifier: DT_N_S_soc_S_usb_41005000
 *
 * Binding (compatible = atmel,sam0-usb):
 *   $ZEPHYR_BASE/dts/bindings/usb/atmel,sam0-usb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_41005000_PATH "/soc/usb@41005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_41005000_FULL_NAME "usb@41005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_41005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_41005000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_41005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_41005000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_41005000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	45, /* /soc/pinctrl@41004400/usb_dc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_41005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_41005000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_usb DT_N_S_soc_S_usb_41005000
#define DT_N_NODELABEL_usb0        DT_N_S_soc_S_usb_41005000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_41005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_41005000_REG_NUM 1
#define DT_N_S_soc_S_usb_41005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_REG_IDX_0_VAL_ADDRESS 1090539520 /* 0x41005000 */
#define DT_N_S_soc_S_usb_41005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usb_41005000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_41005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_41005000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_41005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_COMPAT_MATCHES_atmel_sam0_usb 1
#define DT_N_S_soc_S_usb_41005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_usb_41005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_COMPAT_MODEL_IDX_0 "sam0-usb"
#define DT_N_S_soc_S_usb_41005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_41005000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_41005000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_41005000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_41005000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_41005000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default

/* Generic property macros: */
#define DT_N_S_soc_S_usb_41005000_P_reg {1090539520 /* 0x41005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usb_41005000_P_reg_IDX_0 1090539520
#define DT_N_S_soc_S_usb_41005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usb_41005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, reg, 0) \
	fn(DT_N_S_soc_S_usb_41005000, reg, 1)
#define DT_N_S_soc_S_usb_41005000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, reg, 1)
#define DT_N_S_soc_S_usb_41005000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_41005000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_interrupts {7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_41005000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_usb_41005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_41005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_41005000, interrupts, 1)
#define DT_N_S_soc_S_usb_41005000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, interrupts, 1)
#define DT_N_S_soc_S_usb_41005000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_41005000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_41005000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_status "okay"
#define DT_N_S_soc_S_usb_41005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_41005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_41005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_41005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usb_41005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_41005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, status, 0) \
	fn(DT_N_S_soc_S_usb_41005000, status, 1) \
	fn(DT_N_S_soc_S_usb_41005000, status, 2) \
	fn(DT_N_S_soc_S_usb_41005000, status, 3)
#define DT_N_S_soc_S_usb_41005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 3)
#define DT_N_S_soc_S_usb_41005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_41005000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_41005000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_41005000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_41005000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_compatible {"atmel,sam0-usb"}
#define DT_N_S_soc_S_usb_41005000_P_compatible_IDX_0 "atmel,sam0-usb"
#define DT_N_S_soc_S_usb_41005000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_usb
#define DT_N_S_soc_S_usb_41005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_USB
#define DT_N_S_soc_S_usb_41005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, compatible, 0)
#define DT_N_S_soc_S_usb_41005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, compatible, 0)
#define DT_N_S_soc_S_usb_41005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_41005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_41005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, pinctrl_0, 0)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, pinctrl_0, 0)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41005000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41005000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_41005000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40001000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40001000
 *
 * Binding (compatible = atmel,sam0-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/atmel,sam0-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40001000_PATH "/soc/watchdog@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40001000_FULL_NAME "watchdog@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40001000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40001000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40001000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40001000_EXISTS 1
#define DT_N_ALIAS_watchdog0            DT_N_S_soc_S_watchdog_40001000
#define DT_N_INST_0_atmel_sam0_watchdog DT_N_S_soc_S_watchdog_40001000
#define DT_N_NODELABEL_wdog             DT_N_S_soc_S_watchdog_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40001000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_watchdog_40001000_REG_IDX_0_VAL_SIZE 9 /* 0x9 */
#define DT_N_S_soc_S_watchdog_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_COMPAT_MATCHES_atmel_sam0_watchdog 1
#define DT_N_S_soc_S_watchdog_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_watchdog_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_COMPAT_MODEL_IDX_0 "sam0-watchdog"
#define DT_N_S_soc_S_watchdog_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40001000_P_reg {1073745920 /* 0x40001000 */, 9 /* 0x9 */}
#define DT_N_S_soc_S_watchdog_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_watchdog_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_reg_IDX_1 9
#define DT_N_S_soc_S_watchdog_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40001000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40001000, reg, 1)
#define DT_N_S_soc_S_watchdog_40001000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40001000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40001000, reg, 1)
#define DT_N_S_soc_S_watchdog_40001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40001000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_compatible {"atmel,sam0-watchdog"}
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_IDX_0 "atmel,sam0-watchdog"
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_watchdog
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_WATCHDOG
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40001000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40001000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/nvmctrl@41004000
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000
 *
 * Binding (compatible = atmel,sam0-nvmctrl):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/atmel,sam0-nvmctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_PATH "/soc/nvmctrl@41004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_FULL_NAME "nvmctrl@41004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_SUPPORTS_ORDS \
	49, /* /soc/nvmctrl@41004000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_nvmctrl DT_N_S_soc_S_nvmctrl_41004000
#define DT_N_NODELABEL_nvmctrl         DT_N_S_soc_S_nvmctrl_41004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_REG_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_VAL_ADDRESS 1090535424 /* 0x41004000 */
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_VAL_SIZE 34 /* 0x22 */
#define DT_N_S_soc_S_nvmctrl_41004000_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MATCHES_atmel_sam0_nvmctrl 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MODEL_IDX_0 "sam0-nvmctrl"
#define DT_N_S_soc_S_nvmctrl_41004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nvmctrl_41004000_P_lock_regions 16
#define DT_N_S_soc_S_nvmctrl_41004000_P_lock_regions_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg {1090535424 /* 0x41004000 */, 34 /* 0x22 */}
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_0 1090535424
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_1 34
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 0) \
	fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible {"atmel,sam0-nvmctrl"}
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0 "atmel,sam0-nvmctrl"
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_nvmctrl
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_NVMCTRL
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_LEN 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts {5 /* 0x5 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 0) \
	fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_wakeup_source 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/nvmctrl@41004000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PATH "/soc/nvmctrl@41004000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/nvmctrl@41004000) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PARENT DT_N_S_soc_S_nvmctrl_41004000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REQUIRES_ORDS \
	48, /* /soc/nvmctrl@41004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_nvmctrl_41004000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg {0 /* 0x0 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_1 262144
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 0) \
	fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 1)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/pwm_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_PATH "/soc/pinctrl@41004400/pwm_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/pwm_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_pwm_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_REQUIRES_ORDS \
	19, /* /soc/pinctrl@41004400/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux {17377 /* 0x43e1 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_IDX_0 17377
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom0_uart_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_PATH "/soc/pinctrl@41004400/sercom0_uart_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/sercom0_uart_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_REQUIRES_ORDS \
	29, /* /soc/pinctrl@41004400/sercom0_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux {8880 /* 0x22b0 */, 8864 /* 0x22a0 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_IDX_0 8880
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_IDX_1 8864
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom1_uart_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_PATH "/soc/pinctrl@41004400/sercom1_uart_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/sercom1_uart_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_REQUIRES_ORDS \
	31, /* /soc/pinctrl@41004400/sercom1_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux {9008 /* 0x2330 */, 8960 /* 0x2300 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_IDX_0 9008
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_IDX_1 8960
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom2_i2c_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_PATH "/soc/pinctrl@41004400/sercom2_i2c_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/sercom2_i2c_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_REQUIRES_ORDS \
	33, /* /soc/pinctrl@41004400/sercom2_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux {12928 /* 0x3280 */, 12944 /* 0x3290 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_IDX_0 12928
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_IDX_1 12944
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom3_uart_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_PATH "/soc/pinctrl@41004400/sercom3_uart_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/sercom3_uart_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_REQUIRES_ORDS \
	35, /* /soc/pinctrl@41004400/sercom3_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux {9072 /* 0x2370 */, 9056 /* 0x2360 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_IDX_0 9072
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_IDX_1 9056
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/sercom5_spi_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_PATH "/soc/pinctrl@41004400/sercom5_spi_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/sercom5_spi_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_REQUIRES_ORDS \
	38, /* /soc/pinctrl@41004400/sercom5_spi_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux {12833 /* 0x3221 */, 13153 /* 0x3361 */, 13169 /* 0x3371 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_0 12833
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_1 13153
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_2 13169
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41004400/usb_dc_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_PATH "/soc/pinctrl@41004400/usb_dc_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@41004400/usb_dc_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_REQUIRES_ORDS \
	45, /* /soc/pinctrl@41004400/usb_dc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux {25488 /* 0x6390 */, 25472 /* 0x6380 */}
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_IDX_0 25488
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_IDX_1 25472
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1_P_output_enable_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_nvmctrl_41004000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_sercom_42001400
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_sercom_42001400
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_pm_40000400) fn(DT_N_S_soc_S_gclk_40000c00) fn(DT_N_S_soc_S_eic_40001800) fn(DT_N_S_soc_S_pinmux_41004400) fn(DT_N_S_soc_S_pinmux_41004480) fn(DT_N_S_soc_S_watchdog_40001000) fn(DT_N_S_soc_S_sercom_42000800) fn(DT_N_S_soc_S_sercom_42000c00) fn(DT_N_S_soc_S_sercom_42001000) fn(DT_N_S_soc_S_sercom_42001400) fn(DT_N_S_soc_S_sercom_42001800) fn(DT_N_S_soc_S_sercom_42001c00) fn(DT_N_S_soc_S_tc_42003000) fn(DT_N_S_soc_S_pinctrl_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1) fn(DT_N_S_soc_S_rtc_40001400) fn(DT_N_S_soc_S_adc_42004000) fn(DT_N_S_soc_S_dac_42004800) fn(DT_N_S_soc_S_usb_41005000) fn(DT_N_S_soc_S_dmac_41004800) fn(DT_N_S_soc_S_tc_42003800) fn(DT_N_S_soc_S_tcc_42002000) fn(DT_N_S_soc_S_tcc_42002400) fn(DT_N_S_soc_S_tcc_42002800) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_device_id_80a00c) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_pm_40000400) fn(DT_N_S_soc_S_gclk_40000c00) fn(DT_N_S_soc_S_eic_40001800) fn(DT_N_S_soc_S_pinmux_41004400) fn(DT_N_S_soc_S_pinmux_41004480) fn(DT_N_S_soc_S_watchdog_40001000) fn(DT_N_S_soc_S_sercom_42000800) fn(DT_N_S_soc_S_sercom_42000c00) fn(DT_N_S_soc_S_sercom_42001000) fn(DT_N_S_soc_S_sercom_42001400) fn(DT_N_S_soc_S_sercom_42001c00) fn(DT_N_S_soc_S_tc_42003000) fn(DT_N_S_soc_S_pinctrl_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_pwm_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom2_i2c_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom5_spi_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom0_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom1_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_sercom3_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41004400_S_usb_dc_default_S_group1) fn(DT_N_S_soc_S_adc_42004000) fn(DT_N_S_soc_S_usb_41005000) fn(DT_N_S_soc_S_dmac_41004800) fn(DT_N_S_soc_S_tc_42003800) fn(DT_N_S_soc_S_tcc_42002000) fn(DT_N_S_soc_S_tcc_42002400) fn(DT_N_S_soc_S_tcc_42002800) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_device_id_80a00c) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_atsamd21_xpro 1
#define DT_COMPAT_HAS_OKAY_atmel_samd21j18a 1
#define DT_COMPAT_HAS_OKAY_atmel_samd21 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v6m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv6m_systick 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_nvmctrl 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_atmel_samd2x_pm 1
#define DT_COMPAT_HAS_OKAY_atmel_samd2x_gclk 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_eic 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_pinmux 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_watchdog 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_uart 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_i2c 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_spi 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_tc32 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_pinctrl 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_gpio 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_adc 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_usb 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_dmac 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_tcc_pwm 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_tcc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_id 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_atsamd21_xpro_NUM_OKAY 1
#define DT_N_INST_atmel_samd21j18a_NUM_OKAY 1
#define DT_N_INST_atmel_samd21_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v6m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv6m_systick_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_nvmctrl_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_atmel_samd2x_pm_NUM_OKAY 1
#define DT_N_INST_atmel_samd2x_gclk_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_eic_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_pinmux_NUM_OKAY 2
#define DT_N_INST_atmel_sam0_watchdog_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_uart_NUM_OKAY 3
#define DT_N_INST_atmel_sam0_i2c_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_spi_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_tc32_NUM_OKAY 2
#define DT_N_INST_atmel_sam0_pinctrl_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_gpio_NUM_OKAY 2
#define DT_N_INST_atmel_sam0_adc_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_usb_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_dmac_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_tcc_pwm_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_tcc_NUM_OKAY 2
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_id_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_atsamd21_xpro(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_atsamd21_xpro(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atsamd21_xpro(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atsamd21_xpro(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_samd21j18a(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_atmel_samd21j18a(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_samd21j18a(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_samd21j18a(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_samd21(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_atmel_samd21(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_samd21(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_samd21(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v6m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v6m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v6m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v6m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv6m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv6m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv6m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv6m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_nvmctrl(fn) fn(DT_N_S_soc_S_nvmctrl_41004000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_nvmctrl(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_nvmctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_nvmctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_samd2x_pm(fn) fn(DT_N_S_soc_S_pm_40000400)
#define DT_FOREACH_OKAY_VARGS_atmel_samd2x_pm(fn, ...) fn(DT_N_S_soc_S_pm_40000400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_samd2x_pm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_samd2x_pm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_samd2x_gclk(fn) fn(DT_N_S_soc_S_gclk_40000c00)
#define DT_FOREACH_OKAY_VARGS_atmel_samd2x_gclk(fn, ...) fn(DT_N_S_soc_S_gclk_40000c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_samd2x_gclk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_samd2x_gclk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_eic(fn) fn(DT_N_S_soc_S_eic_40001800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_eic(fn, ...) fn(DT_N_S_soc_S_eic_40001800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_eic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_eic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_pinmux(fn) fn(DT_N_S_soc_S_pinmux_41004400) fn(DT_N_S_soc_S_pinmux_41004480)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_pinmux(fn, ...) fn(DT_N_S_soc_S_pinmux_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41004480, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_pinmux(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_pinmux(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40001000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_uart(fn) fn(DT_N_S_soc_S_sercom_42000800) fn(DT_N_S_soc_S_sercom_42000c00) fn(DT_N_S_soc_S_sercom_42001400)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_uart(fn, ...) fn(DT_N_S_soc_S_sercom_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42000c00, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_42001400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_uart(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_i2c(fn) fn(DT_N_S_soc_S_sercom_42001000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_i2c(fn, ...) fn(DT_N_S_soc_S_sercom_42001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_spi(fn) fn(DT_N_S_soc_S_sercom_42001c00)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_spi(fn, ...) fn(DT_N_S_soc_S_sercom_42001c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_tc32(fn) fn(DT_N_S_soc_S_tc_42003000) fn(DT_N_S_soc_S_tc_42003800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_tc32(fn, ...) fn(DT_N_S_soc_S_tc_42003000, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42003800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_tc32(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_tc32(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_pinctrl(fn) fn(DT_N_S_soc_S_pinctrl_41004400)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_pinctrl(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_gpio(fn) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_gpio(fn, ...) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004400, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41004400_S_gpio_41004480, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_adc(fn) fn(DT_N_S_soc_S_adc_42004000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_adc(fn, ...) fn(DT_N_S_soc_S_adc_42004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_usb(fn) fn(DT_N_S_soc_S_usb_41005000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_usb(fn, ...) fn(DT_N_S_soc_S_usb_41005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_usb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_dmac(fn) fn(DT_N_S_soc_S_dmac_41004800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_dmac(fn, ...) fn(DT_N_S_soc_S_dmac_41004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_dmac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_dmac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_tcc_pwm(fn) fn(DT_N_S_soc_S_tcc_42002000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_tcc_pwm(fn, ...) fn(DT_N_S_soc_S_tcc_42002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_tcc_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_tcc_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_tcc(fn) fn(DT_N_S_soc_S_tcc_42002400) fn(DT_N_S_soc_S_tcc_42002800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_tcc(fn, ...) fn(DT_N_S_soc_S_tcc_42002400, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_tcc(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_tcc(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m0_(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m0_(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m0_(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_id(fn) fn(DT_N_S_device_id_80a00c)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_id(fn, ...) fn(DT_N_S_device_id_80a00c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_id(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_id(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
